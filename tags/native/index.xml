<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Native on A guy with &#39;Ego&#39; in name</title>
    <link>https://bsideup.github.io/tags/native/</link>
    <description>Recent content in Native on A guy with &#39;Ego&#39; in name</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 26 Dec 2018 17:56:42 +0100</lastBuildDate>
    
	<atom:link href="https://bsideup.github.io/tags/native/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JNI cross-compilation with Docker</title>
      <link>https://bsideup.github.io/posts/jni-cross-compilation/</link>
      <pubDate>Wed, 26 Dec 2018 17:56:42 +0100</pubDate>
      
      <guid>https://bsideup.github.io/posts/jni-cross-compilation/</guid>
      <description>As a JVM guy, I got used to &amp;ldquo;write once, run everywhere&amp;rdquo; paradigm. But recently I got an interesting challenge to solve.
I was working on a debugging tool for Project Reactor and part of it is implemented as a native library for Java, using JNI technology.
I did some C++ in the past but never thought how hard is it, to cross-compile a library for 3 major platforms (Windows, Linux and Mac), both locally and on CI environment (from where we perform the releases).</description>
    </item>
    
  </channel>
</rss>