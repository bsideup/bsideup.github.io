<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Maven on A guy with &#39;Ego&#39; in his name</title>
    <link>https://bsideup.github.io/tags/maven/</link>
    <description>Recent content in Maven on A guy with &#39;Ego&#39; in his name</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 28 Jun 2019 14:02:22 +0200</lastBuildDate>
    
	<atom:link href="https://bsideup.github.io/tags/maven/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dependency Management in Gradle</title>
      <link>https://bsideup.github.io/posts/gradle_dependency_management/</link>
      <pubDate>Fri, 28 Jun 2019 14:02:22 +0200</pubDate>
      
      <guid>https://bsideup.github.io/posts/gradle_dependency_management/</guid>
      <description>There is one super popular thing I never did/do in my Gradle projects:
ext { lib_version = &amp;#34;1.2.3&amp;#34; } dependencies { compile &amp;#34;org.corp:lib:$lib_version&amp;#34; } Why not? I know that this approach was/is popular among Maven projects.
But I always preferred the dependencyManagement section of a parent POM because&amp;hellip; it is standartized.
When you switch between projects and want to change a version of dependency, you know where you look at.</description>
    </item>
    
  </channel>
</rss>